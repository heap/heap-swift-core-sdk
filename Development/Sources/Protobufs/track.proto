syntax = "proto3";
package core_sdk.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "common.proto";

option java_package = "com.heap.core_sdk.v1";
option go_package = "core_sdk/v1";

message Utm {
  string source = 1;
  string medium = 2;
  string term = 3;
  string content = 4;
  string campaign = 5;
}

// SessionReplayInfo sub-property
message SessionReplayInfo {

  // SessionReplayPlatform types
  enum SessionReplayPlatform {
    // None provided
    SESSION_REPLAY_PLATFORM_UNSPECIFIED = 0;
    // Auryc
    SESSION_REPLAY_PLATFORM_AURYC = 1;
    // Logrocket
    SESSION_REPLAY_PLATFORM_LOGROCKET = 2;
  }

  // SessionReplayPlatform
  SessionReplayPlatform platform = 1;
  // time of type google.protobuf.Timestamp
  google.protobuf.Timestamp time = 2;
  // includes values like site id, session id, etc
  map<string, Value> url_metadata = 3;
}

// SessionInfo sub-property definition
message SessionInfo {
  // string id
  string id = 1;
  // time of type google.protobuf.Timestamp
  google.protobuf.Timestamp time = 2;
  // referrer
  optional string referrer = 3;
  // search_keyword
  optional string search_keyword = 4;
  // utm
  optional Utm utm = 5;
  // PageviewInfo object
  optional PageviewInfo initial_pageview_info = 6;
}

// Pageview property defintion
message PageviewInfo {
  // Url message definition
  message Url {
    string domain = 1;
    string path = 2;
    string query = 3;
    string hash = 4;
  }

  // Pageview id. (heapjs:v)
  string id = 1;
  // heapjs:ts
  google.protobuf.Timestamp time = 2;
  // View controller, activity, ReactNative control name
  optional string component_or_class_name = 3;
  // Web page or view controller title
  optional string title = 4;
  // Web page URL
  optional Url url = 5;
  // Source-specific properties
  map<string, Value> source_properties = 6;
  // heapjs:pr
  optional string previous_page = 7;
  // custom pageview properties (heapjs:k)
  map<string, Value> properties = 8;
}

// User property definition
message User {
  // user id string
  string id = 1;
  // User's identity
  string identity = 2;
  // initial referrer
  optional string initial_referrer = 3;
  // initial search keyword
  optional string initial_search_keyword = 4;
  // initial utm
  optional Utm initial_utm = 5;
  // initial pageview info
  PageviewInfo initial_pageview_info = 6;
  // property map
  map<string, Value> properties = 7;
}

// ElementNode property definition
message ElementNode {
  // heapjs:n
  optional string node_name = 1;
  // heapjs:c
  optional string node_html_class = 2;
  // heapjs:i
  optional string node_id = 3;
  // heapjs:x
  optional string node_text = 4;
  // heapjs:h
  optional string href = 5;
  // accessibility label primarily used by mobile
  optional string accessibility_label = 6;
  // referencing property name primarily used by mobile
  optional string referencing_property_name = 7;
  // attribute map primarily used by mobile
  map<string, Value> attributes = 8;
}

// Extended event details
message Interaction {
  // Builtin interaction types
  enum BuiltinKind {
    // None provided
    BUILTIN_KIND_UNSPECIFIED = 0;
    // Click
    BUILTIN_KIND_CLICK = 1;
    // Touch
    BUILTIN_KIND_TOUCH = 2;
    // Change
    BUILTIN_KIND_CHANGE = 3;
    // Submit
    BUILTIN_KIND_SUBMIT = 4;
  }

  // First callback method that fired due to interaction
  optional string callback_name = 1;

  oneof kind {
    // eg. drag-and-dropped. Max 1024 UTF-16 code-units.
    string custom = 2;
    // heapjs:t
    BuiltinKind builtin = 3;
  }

  // string representation of a node hierarchy
  optional string hierarchy = 4;
  // hierarchical array of nodes with triggering node first
  repeated ElementNode nodes = 5;
  // any additional properties
  map<string, Value> source_properties = 6;
}

message VersionChange {
  optional ApplicationInfo previous_version = 1;
  ApplicationInfo current_version = 2;
}

message ComponentTransition {
  // List of components that have gone from invisible to visible.
  repeated ElementNode invisible_to_visible = 1;
  // List of components that have gone from visible to invisible.
  repeated ElementNode visible_to_invisible = 2;
}

// Event property definition
message Event {
  // Mobile app visibility
  enum AppVisibility {
    // Default value for unset/unknown app visibility state.
    APP_VISIBILITY_UNKNOWN_UNSPECIFIED = 0;
    // App is in background
    APP_VISIBILITY_BACKGROUNDED = 1;
    // App is in foreground
    APP_VISIBILITY_FOREGROUNDED = 2;
  }

  // A custom event from the `track` API.
  message Custom {
    // Custom name of event
    string name = 1;
    // Properties from `track`.
    map<string, Value> properties = 2;
  }

  oneof kind {
    // See Custom message definition
    Custom custom = 1;
    // See interaction message definition
    Interaction interaction = 2;
    // See VersionChange message definition
    VersionChange version_change = 3;
    // See component transition definition
    ComponentTransition component_transition = 4;
  }

  // Mobile app_visibility_state
  optional AppVisibility app_visibility_state = 20;
}

// Message body
message Message {
  // string id
  string id = 1;
  // string env_id
  string env_id = 2;
  // string user_id
  string user_id = 3;

  // timestamp of type google.protobuf.Timestamp
  google.protobuf.Timestamp time = 4;
  // The library that implements base functionality.
  LibraryInfo base_library = 5;
  // The library providing autocapture or language bridging.
  optional LibraryInfo source_library = 6;

  // See ApplicationInfo definition
  optional ApplicationInfo application = 7;
  // See DeviceInfo definition
  DeviceInfo device = 8;

  // See SessionInfo message definition
  SessionInfo session_info = 9;
  // See pageViewInfo message definition
  optional PageviewInfo pageview_info = 10;  // Null only for sessions

  // property map<string, Value>
  map<string, Value> properties = 11;
  oneof kind {
    // session
    google.protobuf.Empty session = 12;
    // pageview
    google.protobuf.Empty pageview = 13;
    // see Event message definition
    Event event = 14;
    // see User message definition
    User user = 15;
  }

  // see SessionReplayInfo message definition
  optional SessionReplayInfo session_replay_info = 16;
  // session_replay
  optional string session_replay = 17;

  // Components that are user visible at the time the message is fired.
  repeated ElementNode active_contexts = 18;
}

// message batch events container
message MessageBatch {
  // array of events
  repeated Message events = 1;
}

// PostMobileTrackRequest
message PostMobileTrackRequest {
  MessageBatch message_batch = 1;
}

// PostMobileTrackResponse
message PostMobileTrackResponse {
  string status = 1;
}
